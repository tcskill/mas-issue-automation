
name: Automate Issue Creation
on: [workflow_dispatch]
#  schedule:
#    - cron: '0 7 * * *'

jobs:
  check_release:
    name: Check For Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    
    #get notifications data (defaults to unread notifications only)
      - name: Get Notification Data
        run: |
          curl -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.NOTIFICATION_CHECKER }}" \
          https://api.github.com/notifications -o data.json
          
    #check for release within target repository
    #if a release is found, create and issue and mark notification as read

      - name: Check Notification
        id: notif-check
        shell: bash
        run: |

            #          types=($(jq -r '.[].subject.type' data.json))
            #          repos=($(jq -r '.[].repository.full_name' data.json))
            #          titles=($(jq -r '.[].subject.title' data.json))
            #          threadids=($(jq -r '.[].id' data.json))
            #          
            #          declare -i count=0

            count=`jq '. | length' data.json`

            for (( i=0; i<$count; i++ )) do
                
                type=($(jq -r '.[$i].subject.type' data.json))
                echo "type: $type"

                if [[ $type == "Release" ]]; then
                  repo=($(jq -r '.[$i].repository.full_name' data.json))
                  title=($(jq -r '.[$i].subject.title' data.json))
                  threadid=($(jq -r '.[$i].id' data.json))
                  echo "repo: $repo"
                  echo "title: $title"
                  echo "threadid: $threadid"


                fi

            done

            echo "done"

#          for i in "${types[@]}"
#            do
#              if [[ "$i" == *"Release"* ]] && [[ "${repos[$count]}" == *"ibm-mas/ansible-devops"* ]]
#              then
#                echo "relBool=true" >> $GITHUB_ENV
#                echo "repo=${repos[$count]}" >> $GITHUB_ENV
#                echo "title=${titles[$count]}" >> $GITHUB_ENV
#                echo "threadID=${threadids[$count]}" >> $GITHUB_ENV
#                echo "${threadids[$count]}"
#              
#              curl -X "POST" "https://api.github.com/repos/tcskill/mas-issue-automation/issues" \
#              -H "Accept: application/vnd.github+json" \
#              -H "Authorization: Bearer ${{ secrets.NOTIFICATION_CHECKER }}" \
#              -d $'{
#                "title": "New MAS Ansible Release ${{ env.title }}",
#                "body": "New Release ${{ env.title }} created in mas-auto repository ",
#                "labels": [
#                  "enhancement",
#                  "new release"
#                  ]
#                }'
#
#              curl \
#              -X PATCH \
#              -H "Accept: application/vnd.github+json" \
#              -H "Authorization: Bearer ${{ secrets.NOTIFICATION_CHECKER }}" \
#              https://api.github.com/notifications/threads/${{ env.threadID }}
#
#              fi
#              count+=1
#            done
